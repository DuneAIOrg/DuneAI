name: Build & Publish Packages

permissions:
  contents: write
  packages: write
  deployments: write

on:
  push:
    branches:
      - feat/deployments

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Node Dependencies
        run: npm install

      - name: Bump Versions / Push Tags
        id: tag_version_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          dry_run: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main

      - name: Tag Versions
        id: tag_version
        run: |
          echo "::set-output name=new_tag::${{ steps.tag_version_prerelease.outputs.new_tag || steps.tag_version_release.outputs.new_tag }}"
          echo "::set-output name=new_version::${{ steps.tag_version_prerelease.outputs.new_version || steps.tag_version_release.outputs.new_version }}"
          echo "::set-output name=previous_version::${{ steps.tag_version_prerelease.outputs.previous_version || steps.tag_version_release.outputs.previous_version }}"
          echo "::set-output name=changelog::${{ steps.tag_version_prerelease.outputs.changelog || steps.tag_version_release.outputs.changelog }}"

      - name: Create Release
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          prerelease: false

      - name: Export Versions
        id: version
        run: |
          echo "::set-output name=version::${{ steps.tag_version.outputs.new_version || steps.tag_version.outputs.previous_version }}"
          echo "::set-output name=tag::${{ steps.tag_version.outputs.new_tag || steps.tag_version.outputs.previous_version }}"

      - name: Remove tags & release on fail
        if: failure()
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: ${{ steps.tag_version_release.outputs.new_tag }}
          delete_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-github:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs:
      - version
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install Dependencies
        run: npm install

      - name: Update Package Version
        uses: jossef/action-set-json-field@v2
        with:
          file: package.json
          field: version
          value: ${{ needs.version.outputs.version }}

      - name: Build
        run: npm run build

      - name: Populate .npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc

      - name: Deploy to GitHub
        run: npm publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  finalize:
    name: Finalize
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.content }}
    needs:
      - publish-to-github
    steps:
      - name: Update Package Version
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: 'Update package.json version to ${{ needs.version.outputs.version }}'
          commit_options: '--no-verify'
          commit_user_name: 'DuneBot'
          commit_user_email: 'dune[bot]@github.com'
          commit_author: 'DuneBot <dune[bot]@github.com>'
          file_pattern: 'package.json'
          push_options: '--force'
          skip_fetch: false